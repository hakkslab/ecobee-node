// Settings object
// https://www.ecobee.com/home/developer/api/documentation/v1/objects/Settings.shtml
export interface ISettings {
  hvacMode?: string;
  lastServiceDate?: string;
  serviceRemindMe?: boolean;
  monthsBetweenService?: number;
  remindMeDate?: string;
  vent?: string;
  ventilatorMinOnTime?: number;
  serviceRemindTechnician?: boolean;
  eiLocation?: string;
  coldTempAlert?: number;
  coldTempAlertEnabled?: boolean;
  hotTempAlert?: number;
  hotTempAlertEnabled?: boolean;
  coolStages?: number;
  heatStages?: number;
  maxSetBack?: number;
  maxSetForward?: number;
  quickSaveSetBack?: number;
  quickSaveSetForward?: number;
  hasHeatPump?: boolean;
  hasForcedAir?: boolean;
  hasBoiler?: boolean;
  hasHumidifier?: boolean;
  hasErv?: boolean;
  hasHrv?: boolean;
  condensationAvoid?: boolean;
  useCelsius?: boolean;
  useTimeFormat12?: boolean;
  locale?: string;
  humidity?: string;
  humidifierMode?: string;
  backlightOnIntensity?: number;
  backlightSleepIntensity?: number;
  backlightOffTime?: number;
  soundTickVolume?: number;
  soundAlertVolume?: number;
  compressorProtectionMinTime?: number;
  compressorProtectionMinTemp?: number;
  stage1HeatingDifferentialTemp?: number;
  stage1CoolingDifferentialTemp?: number;
  stage1HeatingDissipationTime?: number;
  stage1CoolingDissipationTime?: number;
  heatPumpReversalOnCool?: boolean;
  fanControlRequired?: boolean;
  fanMinOnTime?: number;
  heatCoolMinDelta?: number;
  tempCorrection?: number;
  holdAction?: string;
  heatPumpGroundWater?: boolean;
  hasElectric?: boolean;
  hasDehumidifier?: boolean;
  dehumidifierMode?: string;
  dehumidifierLevel?: number;
  dehumidifyWithAC?: boolean;
  dehumidifyOvercoolOffset?: number;
  autoHeatCoolFeatureEnabled?: boolean;
  wifiOfflineAlert?: boolean;
  heatMinTemp?: number;
  heatMaxTemp?: number;
  coolMinTemp?: number;
  coolMaxTemp?: number;
  heatRangeHigh?: number;
  heatRangeLow?: number;
  coolRangeHigh?: number;
  coolRangeLow?: number;
  userAccessCode?: string;
  userAccessSetting?: number;
  auxRuntimeAlert?: number;
  auxOutdoorTempAlert?: number;
  auxMaxOutdoorTemp?: number;
  auxRuntimeAlertNotify?: boolean;
  auxOutdoorTempAlertNotify?: boolean;
  auxRuntimeAlertNotifyTechnician?: boolean;
  auxOutdoorTempAlertNotifyTechnician?: boolean;
  disablePreHeating?: boolean;
  disablePreCooling?: boolean;
  installerCodeRequired?: boolean;
  drAccept?: string;
  isRentalProperty?: boolean;
  useZoneController?: boolean;
  randomStartDelayCool?: number;
  randomStartDelayHeat?: number;
  humidityHighAlert?: number;
  humidityLowAlert?: number;
  disableHeatPumpAlerts?: boolean;
  disableAlertsOnIdt?: boolean;
  humidityAlertNotify?: boolean;
  humidityAlertNotifyTechnician?: boolean;
  tempAlertNotify?: boolean;
  tempAlertNotifyTechnician?: boolean;
  monthlyElectricityBillLimit?: number;
  enableElectricityBillAlert?: boolean;
  enableProjectedElectricityBillAlert?: boolean;
  electricityBillingDayOfMonth?: number;
  electricityBillCycleMonths?: number;
  electricityBillStartMonth?: number;
  ventilatorMinOnTimeHome?: number;
  ventilatorMinOnTimeAway?: number;
  backlightOffDuringSleep?: boolean;
  autoAway?: boolean;
  smartCirculation?: boolean;
  followMeComfort?: boolean;
  ventilatorType?: string;
  isVentilatorTimerOn?: boolean;
  ventilatorOffDateTime?: string;
  hasUVFilter?: boolean;
  coolingLockout?: boolean;
  ventilatorFreeCooling?: boolean;
  dehumidifyWhenHeating?: boolean;
  ventilatorDehumidify?: boolean;
  groupRef?: string;
  groupName?: string;
  groupSetting?: number;
  fanSpeed?: string;
}
